openapi: 3.0.3
info:
  title: Desks - OpenAPI 3.0
  version: 1.0.11
servers:
  - url: https://u8200608-lab3.local/
tags:
  - name: desks
    description: Everything about desks
paths:
  /api/v1/desks:
    get:
      tags:
        - desks
      summary: Get all existing desks
      operationId: getDesks
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Desks'
      
    post:
      tags:
        - desks
      summary: Create a new desks
      operationId: addDesks
      requestBody:
        description: Create a new desks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Desks'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Desks'
  /api/v1/lists:
    get:
      tags:
        - lists
      summary: Get all existing lists
      operationId: getLists
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lists'
      
    post:
      tags:
        - lists
      summary: Create a new list
      operationId: addLists
      requestBody:
        description: Create a new list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lists'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lists'
     
  /api/v1/desks/{id}:
    get:
      tags:
        - desks
      summary: Get a desk by ID
      operationId: getDesksById
      parameters:
        - name: id
          in: path
          description: ID of the desk to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Desks'
        '404':
          description: Desk not found
      
    put:
      tags:
        - desks
      summary: Replace a desk by ID
      operationId: replaceDeskById
      parameters:
        - name: id
          in: path
          description: ID of the desk to replace
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated desk  data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Desks'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Desks'
        '404':
          description: Desk not found
      
    patch:
      tags:
        - desks
      summary: Update a desk by ID
      operationId: updateDeskById
      parameters:
        - name: id
          in: path
          description: ID of the desk to update
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated desk data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Desks'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Desks'
        '404':
          description: Customer not found
      
    delete:
      tags:
        - desks
      summary: Delete a desks by ID
      operationId: deleteDeskById
      parameters:
        - name: id
          in: path
          description: ID of the desk to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
  /api/v1/lists/{id}:
    get:
      tags:
        - lists
      summary: Get a list by ID
      operationId: getListById
      parameters:
        - name: id
          in: path
          description: ID of the list to return
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lists'
        '404':
          description: List not found
      
    put:
      tags:
        - lists
      summary: Replace a list by ID
      operationId: replaceListById
      parameters:
        - name: id
          in: path
          description: ID of the list to replace
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated list data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lists'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lists'
        '404':
          description: List not found
      
    patch:
      tags:
        - lists
      summary: Update a list by ID
      operationId: updateListById
      parameters:
        - name: id
          in: path
          description: ID of the list to update
          required: true
          schema:
            type: integer
      requestBody:
        description: Updated list data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lists'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lists'
        '404':
          description: list not found
      
    delete:
      tags:
        - lists
      summary: Delete a list by ID
      operationId: deleteListById
      parameters:
        - name: id
          in: path
          description: ID of the list to delete
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
components:
  schemas:
    Desks:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        name:
          type: string
          example: Ivan  
        
    Lists:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        name:
          type: string
          example: My Address
       
        description:
          type: string
          example: About .....
        created_at:
          type: string
          format: date-time